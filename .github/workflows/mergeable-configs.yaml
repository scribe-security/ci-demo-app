name: Full-Kit Policy Test
on: [push, workflow_dispatch]

env:
  SARIF_FILE: ""

jobs:
  build-sboms:
    name: Build SBOMs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sample-policies
        uses: actions/checkout@v2
        with:
          repository: scribe-security/sample-policies
          ref: feature/mergeable_valint_configs
          path: sample-policies
      - name: Checkout test repo
        uses: actions/checkout@v2
        with:
          repository: scribe-public/buildInDocker
          ref: main
          path: buildindocker
      - name: Install valint
        run: curl -sSfL https://get.scribesecurity.com/install.sh | sh -s -- -t valint -D
      - name: Create Git SBOM
        run:
          ${HOME}/.scribe/bin/valint bom git:buildindocker/ -C github -f -o statement --components commits,files --product-key buildindocker --product-version v0.1 -d cache
      - name: Setup Buildx for Docker
        uses: docker/setup-buildx-action@v2
      - name: Build Docker Image
        uses: docker/build-push-action@v4
        with:
          context: buildindocker
          tags: buildindocker:latest
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: false
      - name: Create Docker Image SBOM
        run:
          ${HOME}/.scribe/bin/valint bom docker:buildindocker:latest -C github -f -o statement --product-key buildindocker --product-version v0.1 -d cache
      - name: Create SLSA evidence
        run:
          ${HOME}/.scribe/bin/valint slsa docker:buildindocker:latest -C github -f -o statement --product-key buildindocker --product-version v0.1 -d cache
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'buildindocker:latest'
          format: 'sarif'
          output: 'trivy-results.sarif'
      - name: Create Evidence out of Trivy report
        run: |
          ${HOME}/.scribe/bin/valint bom trivy-results.sarif \
            --predicate-type https://aquasecurity.github.io/trivy/v0.42/docs/configuration/reporting/#sarif \
            -C github -f -o statement-generic --product-key buildindocker --product-version v0.1 -d cache
      - name: tfsec
        uses: aquasecurity/tfsec-sarif-action@v0.1.0
        with:
          working_directory: buildindocker
          sarif_file: tfsec-results.sarif
      - name: Create Evidence out of tfsec report
        run: |
          ${HOME}/.scribe/bin/valint bom tfsec-results.sarif \
            --predicate-type http://docs.oasis-open.org/sarif/sarif/2.1.0 \
            -C github -f -o statement-generic --product-key buildindocker --product-version v0.1 -d cache
  valint-verify:
    name: "valint verify"
    runs-on: ubuntu-latest
    needs: build-sboms
    steps:
      - name: Run valint verify
        continue-on-error: true
        run: |
          ${HOME}/.scribe/bin/valint verify -C github -i statement --push -o sarif --product-key buildindocker --product-version v0.1 -d cache \
            --policy sample-policies/policies/git \
            --policy sample-policies/policies/apis/gith-branch-protection.yml \
              --policy-args Token=${{ secrets.GITHUB_TOKEN }} \
              --policy-args Owner=${{ env.GITHUB_REPOSITORY_OWNER }} \
              --policy-args Repo=${{ env.GITHUB_REPOSITORY }} \
              --policy-args Branch=${{ env.GITHUB_REF_NAME }} \
            --policy sample-policies/policies/images \
            --policy sample-policies/policies/sboms \
            --policy sample-policies/policies/slsa \
            --policy sample-policies/policies/sarif/trivy \
            --policy sample-policies/policies/sarif/tfsec
          SARIF_FILE=$(find cache/ -name "*.sarif")
          echo "SARIF_FILE=$SARIF_FILE" >> "$GITHUB_ENV"
      - name: Upload artifact
        uses: actions/upload-artifact@v3.1.3
        with:
          name: valint-report
          path: ${{ env.SARIF_FILE }}
      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: ${{ env.SARIF_FILE }}
          category: valint