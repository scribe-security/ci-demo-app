name: Full-Kit Policy Test
on: [push, workflow_dispatch]

permissions:
  repository-projects: read

env:
  PRODUCT_KEY: "buildindocker"
  HOSTNAME: ""
  STATEMENT_FILE: "valint-report.sarif.json"
  SARIF_FILE: "valint-report.sarif"

jobs:
  full-kit-check:
    name: Build SBOMs & test policies
    runs-on: ubuntu-latest
    steps:
      - name: Set env vars
        run: |
          HOSTNAME="$(hostname -s)"
          echo "HOSTNAME=${HOSTNAME}" >> $GITHUB_ENV
      - name: Checkout
        uses: actions/checkout@v2
      - name: Checkout sample-policies
        uses: actions/checkout@v2
        with:
          repository: scribe-security/sample-policies
          ref: feature/mergeable_valint_configs
          path: sample-policies
      - name: Checkout test repo
        uses: actions/checkout@v2
        with:
          repository: scribe-public/buildInDocker
          ref: main
          path: buildindocker
      - name: Install valint
        run: curl -sSfL https://get.scribesecurity.com/install.sh | sh -s -- -t valint -D
      - name: Create Git SBOM
        run: |
          ${HOME}/.scribe/bin/valint bom git:buildindocker/ -C github -c mergeable.yaml -f -o statement --components commits,files \
            --product-key ${{ env.PRODUCT_KEY }} --product-version ${{ github.run_number }} -d cache \
            -E -U ${{ secrets.SCRIBE_DEV_CLIENT_ID }} -P ${{ secrets.SCRIBE_DEV_CLIENT_SECRET }} -u https://api.dev.scribesecurity.com
      - name: Setup Buildx for Docker
        uses: docker/setup-buildx-action@v2
      - name: Build Docker Image
        uses: docker/build-push-action@v4
        with:
          context: buildindocker
          tags: buildindocker:latest
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: false
      - name: Create Docker Image SBOM
        run: |
          ${HOME}/.scribe/bin/valint bom docker:buildindocker:latest -C github -c mergeable.yaml -f -o statement \
            --product-key ${{ env.PRODUCT_KEY }} --product-version ${{ github.run_number }} -d cache \
            -E -U ${{ secrets.SCRIBE_DEV_CLIENT_ID }} -P ${{ secrets.SCRIBE_DEV_CLIENT_SECRET }} -u https://api.dev.scribesecurity.com
      - name: Create SLSA evidence
        run: |
          ${HOME}/.scribe/bin/valint slsa docker:buildindocker:latest -C github -c mergeable.yaml -f -o statement \
            --product-key ${{ env.PRODUCT_KEY }} --product-version ${{ github.run_number }} -d cache \
            -E -U ${{ secrets.SCRIBE_DEV_CLIENT_ID }} -P ${{ secrets.SCRIBE_DEV_CLIENT_SECRET }} -u https://api.dev.scribesecurity.com
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'buildindocker:latest'
          format: 'sarif'
          output: 'trivy-results.sarif'
      - name: Create Evidence out of Trivy report
        run: |
          ${HOME}/.scribe/bin/valint bom trivy-results.sarif \
            --predicate-type https://aquasecurity.github.io/trivy/v0.42/docs/configuration/reporting/#sarif \
              -C github -c mergeable.yaml -f -o statement-generic --product-key ${{ env.PRODUCT_KEY }} --product-version ${{ github.run_number }} -d cache \
              -E -U ${{ secrets.SCRIBE_DEV_CLIENT_ID }} -P ${{ secrets.SCRIBE_DEV_CLIENT_SECRET }} -u https://api.dev.scribesecurity.com
      - name: tfsec
        uses: aquasecurity/tfsec-sarif-action@v0.1.0
        with:
          working_directory: buildindocker
          sarif_file: tfsec-results.sarif
      - name: Create Evidence out of tfsec report
        run: |
          ${HOME}/.scribe/bin/valint bom tfsec-results.sarif \
              --predicate-type http://docs.oasis-open.org/sarif/sarif/2.1.0 \
              -C github -c mergeable.yaml -f -o statement-generic --product-key ${{ env.PRODUCT_KEY }} --product-version ${{ github.run_number }} -d cache \
              -E -U ${{ secrets.SCRIBE_DEV_CLIENT_ID }} -P ${{ secrets.SCRIBE_DEV_CLIENT_SECRET }} -u https://api.dev.scribesecurity.com
      - name: Run valint verify
        continue-on-error: true
        run: |
          DEBUG=true ${HOME}/.scribe/bin/valint verify -C github -c mergeable.yaml -i statement --push -o statement -vv \
            --product-key ${{ env.PRODUCT_KEY }} --product-version ${{ github.run_number }} -d cache \
            -E -U ${{ secrets.SCRIBE_DEV_CLIENT_ID }} -P ${{ secrets.SCRIBE_DEV_CLIENT_SECRET }} -u https://api.dev.scribesecurity.com \
            -O ${{ env.STATEMENT_FILE }} \
            --policy sample-policies/policies/git \
            --policy sample-policies/policies/apis/gith-branch-protection.yml \
              --policy-args Token="${{ secrets.GITHUB_TOKEN }}" \
              --policy-args Owner="${{ github.repository_owner }}" \
              --policy-args Repo="$(basename ${{ github.repository }})" \
              --policy-args Branch="${{ github.ref_name }}" \
            --policy sample-policies/policies/images \
            --policy sample-policies/policies/sboms \
            --policy sample-policies/policies/slsa \
              --policy-args BUILDER_ID="${{ env.HOSTNAME }}" \
            --policy sample-policies/policies/sarif/trivy \
            --policy sample-policies/policies/sarif/tfsec
      - name: 'Setup jq'
        uses: dcarbone/install-jq-action@v2.1.0
      - name: Convert in-toto statement to SARIF
        run: |
          SARIF_CONTENT=$(jq -r '.predicate.content' ${{ env.STATEMENT_FILE }})
          echo $SARIF_CONTENT > ${{ env.SARIF_FILE }}
      - name: Upload artifact
        uses: actions/upload-artifact@v3.1.3
        with:
          name: valint-report
          path: ${{ env.SARIF_FILE }}
      - name: Upload SARIF file to GitHub
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: ${{ env.SARIF_FILE }}
          category: valint
          ref: refs/heads/main
          sha: c603cd1f09c229ec26ac8cba4a899474d049be38
